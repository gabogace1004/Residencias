@model UserRoles.Models.Proyecto

@{
    ViewData["Title"] = "Editar Proyecto";
    var asesores = ViewBag.Asesores as List<UserRoles.Models.Asesor>;
    var alumnos = ViewBag.Alumnos as List<UserRoles.Models.Alumno>;
}

<div class="container mt-5">
    <h2 class="mb-4">@ViewData["Title"]</h2>

    <form asp-action="CreateProyecto" method="post" enctype="multipart/form-data">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Datos del proyecto -->
        <div class="mb-3">
            <label class="form-label">Nombre del Proyecto</label>
            <input asp-for="Nombre" class="form-control" />
            <span asp-validation-for="Nombre" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Descripción</label>
            <textarea asp-for="Descripcion" class="form-control"></textarea>
            <span asp-validation-for="Descripcion" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Razón Social</label>
            <input asp-for="RazonSocial" class="form-control" />
            <span asp-validation-for="RazonSocial" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Estado</label>
            <select asp-for="Estado" class="form-select">
                <option value="No iniciado">No iniciado</option>
                <option value="En curso">En curso</option>
                <option value="Finalizado">Finalizado</option>
            </select>
            <span asp-validation-for="Estado" class="text-danger"></span>
        </div>

        <div class="row mb-3">
            <div class="col">
                <label class="form-label">Fecha Inicio</label>
                <input asp-for="FechaInicio" type="date" class="form-control" required />
                <span asp-validation-for="FechaInicio" class="text-danger"></span>
            </div>
            <div class="col">
                <label class="form-label">Fecha Fin</label>
                <input asp-for="FechaFin" type="date" class="form-control" required />
                <span asp-validation-for="FechaFin" class="text-danger"></span>
            </div>
        </div>

        <div class="mb-3">
            <label class="form-label">Asesor Responsable</label>
            <select asp-for="AsesorId" class="form-select" required>
                <option disabled selected>Seleccione un asesor</option>
                @foreach (var a in asesores)
                {
                    <option value="@a.Id">@a.Nombre @a.ApellidoPaterno @a.ApellidoMaterno</option>
                }
            </select>
            <span asp-validation-for="AsesorId" class="text-danger"></span>
        </div>

        <!-- Buscador de alumnos -->
        <div class="mb-3">
            <label class="form-label">Buscar alumno</label>
            <input type="text" id="buscadorAlumno" class="form-control" placeholder="Ej. 123456 o Juan" />
            <ul id="listaResultados" class="list-group mt-2"></ul>
        </div>

        <div class="mb-3">
            <label class="form-label">Alumnos seleccionados</label>
            <ul id="alumnosSeleccionados" class="list-group"></ul>
        </div>
        <input type="hidden" id="alumnosSeleccionadosInput" name="AlumnosMatriculas" />

        <!-- Carga de archivos -->
        <div class="mb-3">
            <label class="form-label">Agregar Archivos</label>
            <input type="file"
                   name="ArchivosAdjuntos"
                   class="form-control"
                   multiple
                   accept=".pdf,.zip"
                   onchange="listarArchivos(this)" />
            <ul id="archivosPrevios" class="list-group mt-2"></ul>
        </div>

        <button type="submit" class="btn btn-success">Guardar Proyecto</button>
        <a asp-action="Proyectos" class="btn btn-secondary ms-2">Cancelar</a>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Datos de alumnos para el buscador
        const alumnos = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(alumnos));
        const buscador = document.getElementById("buscadorAlumno");
        const resultados = document.getElementById("listaResultados");
        const seleccionados = document.getElementById("alumnosSeleccionados");
        const inputSeleccionados = document.getElementById("alumnosSeleccionadosInput");

        const estadoMatriculas = new Set();

        buscador.addEventListener("input", function () {
            const filtro = this.value.toLowerCase();
            resultados.innerHTML = "";

            if (filtro.length < 2) return;

            const filtrados = alumnos.filter(a =>
                a.Matricula.toLowerCase().includes(filtro) ||
                a.Nombre.toLowerCase().includes(filtro)
            );

            filtrados.slice(0, 10).forEach(a => {
                const li = document.createElement("li");
                li.className = "list-group-item list-group-item-action";
                li.textContent = `${a.Matricula} - ${a.Nombre} ${a.ApellidoPaterno}`;
                li.style.cursor = "pointer";

                li.addEventListener("click", () => {
                    if (estadoMatriculas.has(a.Matricula)) return;

                    const liSel = document.createElement("li");
                    liSel.className = "list-group-item d-flex justify-content-between align-items-center";
                    liSel.innerHTML = `<span>${a.Matricula} - ${a.Nombre} ${a.ApellidoPaterno}</span>
                        <button type='button' class='btn btn-sm btn-danger'>Quitar</button>`;

                    liSel.querySelector("button").addEventListener("click", () => {
                        seleccionados.removeChild(liSel);
                        estadoMatriculas.delete(a.Matricula);
                        actualizarInput();
                    });

                    seleccionados.appendChild(liSel);
                    estadoMatriculas.add(a.Matricula);
                    actualizarInput();
                });

                resultados.appendChild(li);
            });
        });

        function actualizarInput() {
            inputSeleccionados.value = Array.from(estadoMatriculas).join(",");
        }

        function listarArchivos(input) {
            const lista = document.getElementById("archivosPrevios");
            lista.innerHTML = "";

            for (let i = 0; i < input.files.length; i++) {
                const li = document.createElement("li");
                li.className = "list-group-item";
                li.textContent = input.files[i].name;
                lista.appendChild(li);
            }
        }

        // Ocultar campos según estado
        const estadoSelect = document.querySelector("select[name='Estado']");
        const fechasRow = document.querySelectorAll(".row.mb-3")[0];
        const asesorField = document.querySelector("select[name='AsesorId']").closest(".mb-3");
        const alumnosFields = [
            document.getElementById("buscadorAlumno").closest(".mb-3"),
            document.getElementById("alumnosSeleccionados").closest(".mb-3")
        ];

        function toggleCamposSegunEstado() {
            const estado = estadoSelect.value;
            const mostrar = (estado !== "No iniciado");

            fechasRow.style.display = mostrar ? "" : "none";
            fechasRow.querySelectorAll("input").forEach(i => i.required = mostrar);

            asesorField.style.display = mostrar ? "" : "none";
            asesorField.querySelector("select").required = mostrar;

            alumnosFields.forEach(f => f.style.display = mostrar ? "" : "none");
        }

        estadoSelect.addEventListener("change", toggleCamposSegunEstado);
        document.addEventListener("DOMContentLoaded", toggleCamposSegunEstado);
    </script>
}
